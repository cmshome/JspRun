<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse - Hibernate Tools
    Hibernate 映射文件
-->
<hibernate-mapping>
    <!--
        class:建立javaBean和表之间的关系
          * name:对应的javabean的完整的类路径
          * table:表名
     -->
    <class name="cn.jsprun.domain.Access" table="jrun_access" >
        <composite-id name="id" class="cn.jsprun.domain.AccessId">
            <key-property name="uid" type="java.lang.Integer">
                <column name="uid" />
            </key-property>
            <key-property name="fid" type="java.lang.Short">
                <column name="fid" />
            </key-property>
        </composite-id>
        <!--
           property:待映射的持久化类中的属性
             * name:持久化类中的属性名
             * type":property name="name"  name属性: Customer类中是String
                     column name="name"    name字段名,customers表中是varchar
               type:指定的是hibernate中的数据类型,该数据类型是java类型和数据库中类型的桥梁
                    ="string"   表示java的属性的类型是String  数据中类型是varhcar类型
                    ="integer"  表 示java的属性的类型是Integer  数据中类型是int类型
                    string对应的是org.hibernate.type.StringType类
                    integer对应的是org.hibernate.type.IntegerType类

          column: 持久化类中的属性对应的表中的字段
             * name:表示表中的字段名
         -->
        <property name="allowview" type="java.lang.Byte">
            <column name="allowview" not-null="true" />
        </property>
        <property name="allowpost" type="java.lang.Byte">
            <column name="allowpost" not-null="true" />
        </property>
        <property name="allowreply" type="java.lang.Byte">
            <column name="allowreply" not-null="true" />
        </property>
        <property name="allowgetattach" type="java.lang.Byte">
            <column name="allowgetattach" not-null="true" />
        </property>
        <property name="allowpostattach" type="java.lang.Byte">
            <column name="allowpostattach" not-null="true" />
        </property>
    </class>
</hibernate-mapping>
